{"version":3,"sources":["components/Sketch/SketchColor.component.js","components/Palette/colorPalette.component.js","App.js","reportWebVitals.js","index.js"],"names":["SketchColor","props","handleClick","setState","displayColorPicker","state","handleClose","handleChange","color","rgb","items","r","g","b","a","styles","reactCSS","width","height","borderRadius","background","this","className","onClick","style","onChange","React","Component","ColorPallete","backgroundColor","hexCode","update","bind","index","App","colorsNum","colors","i","push","generateColor","Math","random","toString","substr","slice","currentColor","map","updateColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAgEeA,E,kDAzDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAcVC,YAAc,WACV,EAAKC,SAAS,CAAEC,oBAAqB,EAAKC,MAAMD,sBAhBjC,EAmBnBE,YAAc,WACV,EAAKH,SAAS,CAAEC,oBAAoB,KApBrB,EAuBnBG,aAAe,SAACC,GACZ,EAAKL,SAAS,CAAEK,MAAOA,EAAMC,OAtB7B,EAAKJ,MAAQ,CACTK,MAAO,EACPN,oBAAoB,EACpBI,MAAO,CACHG,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MATI,E,0CA2BnB,WAGI,IAAMC,EAASC,IAAS,CACpB,QAAW,CACTR,MAAO,CACLS,MAAO,OACPC,OAAQ,QACRC,aAAc,MACdC,WAAW,QAAD,OAAUC,KAAKhB,MAAMG,MAAMG,EAA3B,aAAkCU,KAAKhB,MAAMG,MAAMI,EAAnD,aAA0DS,KAAKhB,MAAMG,MAAMK,EAA3E,aAAiFQ,KAAKhB,MAAMG,MAAMM,EAAlG,SAKlB,OACI,sBAAKQ,UAAU,MAAf,UAEI,qBAAKA,UAAU,SAASC,QAASF,KAAKnB,YAAtC,SAEI,qBAAKsB,MAAOT,EAAOP,UAErBa,KAAKhB,MAAMD,mBAAqB,sBAAKkB,UAAU,UAAf,UAClC,qBAAKA,UAAU,QAAQC,QAASF,KAAKf,cACjC,cAAC,IAAD,CAAcE,MAAOa,KAAKhB,MAAMG,MAAOiB,SAAUJ,KAAKd,kBACjD,Y,GApDCmB,IAAMC,WCUjBC,G,mKAZX,WACI,IAAIJ,EAAQ,CACVK,gBAAiBR,KAAKpB,MAAM6B,SAE9B,OACE,qBAAKR,UAAU,QAAQC,QAASF,KAAKpB,MAAM8B,OAAOC,KAAKX,KAAMA,KAAKpB,MAAMgC,OAAQT,MAAOA,EAAvF,SACE,mBAAGF,UAAU,aAAb,SAA2BD,KAAKpB,MAAM6B,gB,GAPvBJ,IAAMC,YCgDlBO,E,kDA5Cb,aAAgB,IAAD,uBACb,gBACK7B,MAAQ,CACX8B,UAAW,EACXC,OAAQ,IAEV,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAKhC,MAAM8B,UAAWE,GAAI,EAC5C,EAAKhC,MAAM+B,OAAOE,KAAK,CAACR,QAAS,EAAKS,kBAP3B,S,iDAWf,WACE,MAAO,IAAOC,KAAKC,SAASC,SAAS,IAAIC,QAAQ,K,yBAGnD,SAAYV,GACV,IAAIG,EAASf,KAAKhB,MAAM+B,OAAOQ,QACzBC,EAAexB,KAAKkB,gBAC1BH,EAAOH,GAAOH,QAAUe,EACxBxB,KAAKlB,SAAL,2BAAkBkB,KAAKhB,OAAvB,IAA8B+B,OAAQf,KAAKhB,MAAM+B,Y,oBAInD,WAAW,IAAD,OAGR,OACE,sBAAKd,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SAEE,cAAC,EAAD,MAGF,qBAAKA,UAAU,kBAAf,SAECD,KAAKhB,MAAM+B,OAAOU,KAAI,SAACtC,EAAOyB,GAAR,OACrB,cAAC,EAAD,CAAqCA,MAAOA,EAAOF,OAAQ,EAAKgB,YAAYf,KAAK,GAAOF,QAAStB,EAAMsB,SAAvG,gBAA4BG,gB,GAtCpBP,IAAMC,WCOTqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1bd2fa25.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport reactCSS from 'reactcss'\nimport { SketchPicker } from 'react-color';\nimport './SketchColor.styles.scss';\n \nclass SketchColor extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: 5,\n            displayColorPicker: false,\n            color: {\n                r: '255',\n                g: '255',\n                b: '255',\n                a: '1',\n            },   \n        };\n      }\n     \n     \n    handleClick = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker })\n    };\n\n    handleClose = () => {\n        this.setState({ displayColorPicker: false })\n    };\n     \n    handleChange = (color) => {\n        this.setState({ color: color.rgb });\n    }\n    \n    render(){\n        \n\n        const styles = reactCSS({\n            'default': {\n              color: {\n                width: '100%',\n                height: '200px',\n                borderRadius: '2px',\n                background: `rgba(${this.state.color.r}, ${ this.state.color.g}, ${ this.state.color.b}, ${this.state.color.a})`,\n              }\n            },\n          });\n\n        return(\n            <div className=\"col\">\n                \n                <div className=\"swatch\" onClick={this.handleClick}>\n                     \n                    <div style={styles.color} />\n                </div>\n                { this.state.displayColorPicker ? <div className=\"popover\">\n                <div className=\"cover\" onClick={this.handleClose}/>\n                    <SketchPicker color={this.state.color} onChange={this.handleChange} />\n                </div> : null }\n            </div>\n        )\n    }\n}\n\nexport default SketchColor;","import React, { useState } from 'react';\nimport './colorPalette.styles.scss'; \n\nclass ColorPallete extends React.Component{\n    render () {\n        let style = {\n          backgroundColor: this.props.hexCode\n        }\n        return (\n          <div className=\"color\" onClick={this.props.update.bind(this, this.props.index)} style={style}>\n            <p className=\"color-code\">{this.props.hexCode}</p>\n          </div>\n        );\n      }\n}\n\nexport default ColorPallete;"," \nimport React from 'react';\nimport './App.css';\nimport SketchColor from './components/Sketch/SketchColor.component';\nimport ColorPallete from './components/Palette/colorPalette.component';\nclass App extends React.Component {\n  \n  constructor () {\n    super();\n    this.state = {\n      colorsNum: 5,\n      colors: [],\n    };\n    for (let i = 0; i < this.state.colorsNum; i +=1) {\n      this.state.colors.push({hexCode: this.generateColor()});\n    }\n  }\n    \n  generateColor() {\n    return '#' +  Math.random().toString(16).substr(-6);\n  }\n   \n  updateColor(index) {\n    let colors = this.state.colors.slice();\n    const currentColor = this.generateColor();\n    colors[index].hexCode = currentColor;\n    this.setState({...this.state, colors: this.state.colors});\n     \n }\n  \n  render () {\n    \n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n           \n          <SketchColor />\n          \n        </div>\n        <div className=\"color-container\">\n         \n        {this.state.colors.map((color, index) => \n          <ColorPallete key={`color-${index}`} index={index} update={this.updateColor.bind(this)} hexCode={color.hexCode}></ColorPallete>)}\n      </div>\n      </div>\n       \n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}